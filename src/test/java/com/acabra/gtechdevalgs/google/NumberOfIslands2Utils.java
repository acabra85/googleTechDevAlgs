package com.acabra.gtechdevalgs.google;

import java.util.ArrayList;
import java.util.List;

public class NumberOfIslands2Utils {


    static TestInputObject getNumberOfIslands2TestData4() {
        int rows = 21;
        int cols = 71;
        String expectedStr = "[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,46,47,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,61,62,62,62,63,63,64,65,66,67,68,69,70,71,71,72,73,73,74,75,76,77,78,79,79,80,81,82,83,83,83,84,85,86,87,88,88,89,90,91,92,92,93,93,93,94,95,96,97,98,98,99,100,101,100,101,102,103,103,104,105,106,107,108,109,110,110,111,112,111,112,113,114,114,115,116,117,118,118,118,119,120,121,122,122,122,123,124,125,125,125,126,126,126,126,126,126,125,125,126,127,128,129,130,131,132,132,133,134,135,135,135,136,135,136,137,137,138,139,140,140,141,142,143,144,144,144,145,146,146,147,148,149,150,151,152,153,153,154,154,155,155,156,157,157,156,156,157,158,159,158,157,158,159,160,161,162,163,163,163,163,162,163,164,165,164,165,165,166,167,167,167,166,166,166,167,166,166,165,165,166,166,166,166,167,166,167,167,168,169,169,168,168,169,170,171,171,170,170,170,170,170,171,172,172,172,173,174,174,175,175,176,176,177,178,179,179,178,177,177,177,176,176,177,178,179,180,181,181,182,182,183,183,184,183,183,183,182,183,182,182,182,182,182,183,184,184,185,185,185,185,186,186,187,186,186,185,186,187,187,188,189,189,190,191,192,193,193,194,193,193,194,194,194,195,195,196,197,198,198,197,198,197,197,197,197,197,198,199,200,201,201,202,203,203,204,204,203,203,203,203,202,203,203,204,204,204,205,206,207,207,207,207,207,207,208,206,205,204,203,203,203,203,202,202,203,204,204,205,205,205,205,206,207,207,207,208,209,209,208,209,208,208,209,210,210,209,208,206,206,206,205,204,204,203,204,204,204,203,203,203,204,204,205,205,205,204,203,203,201,201,201,201,201,202,203,200,200,200,201,200,200,200,199,199,199,198,198,198,198,198,197,197,197,197,195,195,194,195,194,195,196,196]";
        String positionStr ="[[19,28],[14,38],[15,44],[17,12],[6,19],[11,69],[2,30],[7,43],[19,6],[7,29],[10,21],[17,55],[20,66],[12,28],[11,64],[12,52],[18,15],[2,52],[10,20],[0,50],[16,5],[17,25],[12,67],[6,45],[13,17],[5,55],[10,42],[20,17],[3,26],[20,61],[14,10],[9,1],[9,69],[6,29],[11,53],[3,66],[4,45],[12,65],[11,35],[5,67],[18,35],[2,57],[12,12],[13,53],[9,65],[13,0],[3,18],[13,39],[5,54],[20,43],[19,29],[17,37],[17,45],[3,38],[2,61],[2,65],[3,21],[5,40],[10,4],[12,36],[2,8],[3,33],[15,4],[13,35],[0,45],[20,29],[10,66],[19,7],[0,46],[19,11],[10,22],[19,0],[0,9],[2,20],[16,64],[10,37],[16,49],[4,20],[20,68],[10,38],[17,59],[15,54],[17,60],[19,18],[0,60],[9,62],[3,69],[10,44],[15,2],[14,44],[17,0],[18,42],[17,28],[11,10],[11,42],[11,67],[0,32],[8,0],[17,6],[7,26],[17,65],[17,66],[7,38],[8,17],[7,60],[0,16],[7,59],[18,8],[16,63],[7,0],[11,46],[0,7],[6,4],[2,63],[8,56],[18,18],[12,70],[2,15],[14,65],[13,52],[11,0],[10,48],[7,8],[11,44],[0,35],[4,64],[6,36],[16,17],[7,34],[1,33],[11,60],[17,11],[4,58],[4,9],[18,7],[15,40],[11,24],[17,3],[7,9],[1,38],[1,14],[15,21],[14,68],[14,69],[16,40],[5,60],[18,46],[15,51],[7,65],[1,34],[15,55],[19,63],[5,35],[20,9],[13,1],[20,69],[19,67],[17,44],[12,44],[10,49],[12,43],[14,21],[18,11],[11,9],[4,56],[6,70],[8,54],[1,55],[17,47],[18,38],[3,31],[16,37],[13,7],[15,6],[18,33],[4,60],[17,40],[7,3],[3,32],[13,41],[5,62],[17,4],[20,5],[15,32],[19,31],[8,69],[19,58],[3,35],[6,64],[0,37],[15,56],[6,46],[4,42],[4,51],[2,7],[7,13],[20,47],[10,29],[12,18],[20,52],[5,5],[12,34],[1,57],[7,32],[3,58],[14,29],[2,32],[2,46],[14,5],[3,9],[19,68],[18,16],[19,2],[6,23],[20,3],[10,69],[9,0],[0,13],[20,38],[6,14],[0,21],[6,50],[2,5],[1,20],[5,20],[1,5],[10,0],[7,6],[15,13],[8,21],[7,14],[9,9],[19,8],[13,25],[5,30],[1,16],[18,19],[16,44],[4,5],[15,37],[20,14],[20,8],[5,23],[13,44],[17,56],[13,62],[2,18],[1,58],[17,2],[20,40],[8,9],[8,52],[6,24],[19,65],[7,48],[20,51],[2,21],[7,39],[11,27],[7,22],[12,6],[19,12],[12,66],[0,55],[20,62],[11,20],[2,35],[2,0],[6,7],[5,41],[9,37],[8,44],[16,15],[9,48],[18,54],[19,52],[19,24],[19,46],[5,0],[19,50],[2,37],[18,31],[6,20],[4,59],[5,39],[9,38],[19,51],[3,67],[11,33],[7,57],[13,47],[20,64],[8,24],[13,69],[4,11],[4,46],[13,32],[18,3],[20,54],[18,17],[7,5],[15,12],[12,7],[6,11],[5,4],[17,26],[7,12],[12,68],[8,45],[8,2],[15,34],[12,20],[1,26],[6,54],[19,16],[0,17],[9,13],[4,65],[12,58],[11,52],[8,32],[18,32],[11,50],[9,50],[17,13],[11,17],[16,53],[18,26],[2,42],[14,58],[0,23],[19,44],[9,39],[15,47],[11,70],[10,35],[8,41],[15,39],[20,50],[2,50],[17,39],[1,28],[7,63],[16,61],[15,58],[19,17],[11,40],[20,46],[12,41],[6,32],[2,67],[4,52],[14,24],[0,43],[17,34],[6,56],[2,53],[1,69],[0,11],[16,48],[1,47],[14,12],[7,23],[8,37],[17,18],[7,27],[7,2],[10,63],[13,6],[3,23],[12,8],[1,52],[11,30],[9,57],[16,57],[9,58],[4,38],[18,36],[10,17],[20,24],[13,64],[18,37],[4,21],[17,33],[2,33],[15,10],[8,40],[14,52],[19,1],[2,45],[11,55],[3,40],[8,31],[20,57],[6,33],[6,22],[6,28],[2,11],[4,15],[4,31],[16,26],[9,27],[10,61],[5,52],[3,68],[0,19],[13,40],[0,52],[18,22],[1,24],[13,29],[12,33],[16,58],[19,66],[6,62],[18,40],[17,58],[2,34],[15,63],[8,23],[14,50],[20,16],[6,9],[8,1],[3,0],[20,10],[15,23],[1,0],[13,4],[8,25],[10,13],[12,9],[18,39],[3,24],[20,63],[16,39],[7,36],[15,65],[13,10],[19,20],[3,54],[12,35],[17,49],[17,31],[14,48],[18,65],[2,44],[9,51],[17,64],[16,36],[7,10],[5,9],[12,13],[6,59],[13,21],[8,14],[10,67],[20,56],[6,53],[18,25],[14,39],[8,70],[10,27],[0,48],[0,36],[12,56],[3,28],[15,14]]";
        return TestInputObject.of(rows, cols, positionStr, expectedStr);
    }

    static TestInputObject getNumberOfIslands2TestData5() {
        int rows = 60;
        int cols = 24;
        String expectedStr = "[1,2,3,4,5,6,7,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,26,27,28,29,30,31,32,33,34,34,35,36,36,37,38,39,39,40,41,42,43,44,45,45,46,46,47,48,49,49,49,50,51,52,53,54,54,54,55,56,56,56,57,58,59,60,61,62,63,64,64,65,66,66,67,68,69,70,71,72,73,74,75,76,77,78,79,79,80,81,82,83,84,85,86,86,87,88,89,90,91,91,92,93,94,95,96,97,97,98,98,99,100,101,102,103,104,105,106,106,107,108,109,110,111,111,112,113,114,115,116,117,118,119,120,120,121,122,123,124,125,125,125,126,126,126,126,126,126,127,127,128,128,128,129,129,130,130,131,132,132,133,134,133,134,135,136,137,136,136,137,138,137,137,137,138,137,137,137,137,137,138,139,140,139,139,139,138,139,138,139,140,141,142,141,142,143,144,145,146,147,148,149,150,151,152,153,152,153,153,152,152,152,153,153,152,153,154,154,154,155,156,156,156,154,154,153,154,154,155,155,156,157,157,157,158,158,158,158,159,160,161,160,160,160,161,161,161,162,161,160,160,158,157,156,157,158,158,158,158,158,159,160,161,161,162,163,164,164,165,166,167,168,169,168,168,169,169,168,167,166,167,167,167,168,169,168,169,170,170,171,172,173,174,175,175,175,176,176,176,175,175,176,176,176,177,176,176,176,175,175,176,176,177,177,178,177,177,177,177,177,177,175,175,175,175,176,177,178,179,179,179,179,179,179,179,180,180,180,180,179,180,181,181,182,182,183,184,184,185,185,185,186,186,184,184,184,185,186,185,185,183,183,183,182,182,182,183,182,183,183,184,185,185,183,182,182,182,182,183,183,184,184,183,183,184,183,183,184,183,183,184,184,185,185,185,185,185,185,183,183,184,185,186,187,186,186,186,186,186,184,182,182,183,182,182,182,182,181,181,181,182,182,183,183,183,181,181,180,179,179,179,180,179,177,176,176,175,173,174,174,173,172,173,172,173,173,174,173,173,174,174,173,173,173,172,173,172,172]";
        String positionStr = "[[32,7],[28,0],[28,18],[6,11],[31,22],[36,21],[6,8],[29,18],[39,10],[55,22],[51,1],[14,12],[14,3],[37,9],[20,13],[51,19],[1,22],[19,11],[44,22],[24,8],[42,16],[8,12],[52,0],[12,1],[48,18],[6,19],[58,20],[7,8],[38,19],[47,5],[7,21],[22,4],[37,3],[0,12],[53,10],[50,12],[1,23],[24,18],[22,17],[19,10],[24,16],[46,16],[57,18],[37,21],[18,5],[30,6],[25,23],[45,5],[41,18],[32,12],[6,10],[8,1],[32,11],[1,1],[48,6],[17,6],[0,22],[36,9],[59,12],[50,9],[59,4],[53,13],[49,16],[24,7],[33,11],[2,7],[1,16],[8,2],[37,19],[32,9],[34,4],[41,9],[26,7],[10,15],[18,3],[16,4],[12,16],[16,5],[21,19],[16,14],[19,3],[58,23],[10,17],[5,15],[43,5],[27,9],[34,18],[9,6],[2,19],[46,11],[39,16],[10,21],[46,1],[9,18],[10,14],[27,23],[23,0],[24,4],[48,10],[55,0],[34,0],[30,20],[58,18],[54,21],[18,15],[27,5],[42,19],[35,19],[27,7],[49,23],[21,2],[31,16],[12,18],[9,11],[28,10],[50,19],[18,1],[59,18],[27,11],[44,15],[2,15],[37,17],[53,7],[12,21],[56,11],[42,3],[37,16],[23,15],[0,17],[13,4],[44,6],[17,13],[9,21],[49,14],[50,17],[27,3],[3,2],[41,12],[16,10],[3,23],[14,8],[52,2],[28,1],[58,7],[28,22],[4,18],[28,15],[13,2],[56,0],[34,11],[17,11],[55,11],[20,12],[46,12],[0,1],[2,2],[57,22],[2,22],[56,14],[9,19],[29,19],[19,7],[49,6],[0,10],[42,5],[51,22],[36,13],[36,12],[22,23],[14,21],[42,4],[46,21],[25,17],[33,22],[46,19],[3,22],[26,11],[26,4],[32,23],[58,19],[5,11],[10,6],[56,4],[31,23],[38,17],[49,5],[6,12],[18,0],[34,21],[0,5],[41,7],[27,22],[42,2],[46,15],[29,20],[36,0],[35,18],[13,20],[34,16],[20,6],[32,5],[34,22],[48,4],[59,21],[25,13],[4,13],[41,14],[32,17],[45,13],[14,14],[30,12],[25,2],[3,20],[14,19],[41,8],[39,5],[24,3],[26,5],[33,10],[30,21],[35,15],[25,5],[24,2],[55,9],[10,8],[13,5],[16,3],[8,20],[59,2],[33,0],[27,15],[24,17],[37,4],[34,15],[12,12],[45,4],[16,18],[48,14],[15,0],[47,8],[59,11],[22,22],[54,5],[47,14],[4,22],[18,7],[57,6],[53,15],[48,22],[32,22],[58,11],[27,0],[57,1],[28,5],[20,19],[30,9],[18,4],[12,2],[47,16],[48,5],[56,1],[38,18],[2,11],[49,0],[30,19],[1,0],[29,1],[1,21],[9,0],[43,7],[3,16],[3,7],[37,6],[12,7],[9,4],[15,5],[41,23],[1,4],[39,0],[49,3],[13,22],[57,23],[56,5],[21,16],[47,18],[45,15],[38,16],[28,9],[1,13],[47,12],[8,18],[40,2],[53,20],[12,22],[23,13],[38,12],[58,17],[20,15],[58,5],[52,9],[58,15],[44,9],[44,23],[18,13],[50,15],[59,17],[11,1],[32,16],[58,8],[23,5],[14,11],[44,16],[30,4],[34,17],[20,18],[14,9],[27,10],[2,12],[4,6],[26,2],[54,8],[11,17],[25,20],[52,10],[43,23],[53,0],[3,11],[7,19],[38,0],[1,12],[4,2],[31,19],[27,12],[59,6],[17,21],[49,21],[44,20],[2,21],[26,20],[29,2],[50,5],[53,2],[2,8],[44,3],[49,18],[11,6],[19,5],[17,12],[38,2],[20,23],[35,20],[56,7],[36,22],[54,1],[32,1],[15,4],[46,23],[41,4],[22,18],[46,7],[27,16],[49,22],[12,4],[57,4],[43,21],[4,0],[29,9],[24,19],[43,6],[8,6],[9,7],[21,18],[35,16],[44,8],[31,8],[23,14],[36,5],[5,2],[52,12],[55,18],[13,23],[9,20],[17,4],[30,16],[55,19],[34,19],[46,9],[35,5],[55,13],[5,13],[36,19],[26,9],[8,15],[8,11],[42,6],[34,13],[47,15],[59,22],[35,1],[17,18],[58,13],[46,2],[27,17],[33,5],[6,2],[50,23],[50,16],[25,22],[53,22],[5,7],[22,10],[39,22],[9,17],[18,21],[23,2],[40,5],[39,17],[2,16],[35,21],[37,18],[7,14],[40,4],[56,8],[42,20],[36,20],[8,14],[18,18],[35,22],[37,1],[32,2],[32,14],[35,14],[15,10],[12,17],[54,18],[56,13],[51,2],[22,3],[16,9],[1,18],[28,17],[22,2],[55,10],[14,7],[8,19],[31,9],[8,9],[14,0],[16,6],[32,0],[23,9],[49,19],[42,0],[44,14],[54,12],[10,7],[43,19],[49,11],[44,10],[45,12],[3,12],[29,4],[49,15],[37,23],[11,7],[43,4]]";
        return TestInputObject.of(rows, cols, positionStr, expectedStr);
    }

    public static TestInputObject getNumberOfIslands2TestData6() {
        String positionStr = "[[1,3],[0,3],[0,4],[1,4],[2,4],[3,4],[3,3],[0,0],[1,0],[0,1],[2,0],[0,2],[3,0],[2,2],[2,1]]";
        String expectedStr = "[1,1,1,1,1,1,1,2,2,2,2,1,1,2,1]";
        return TestInputObject.of(4, 5, positionStr, expectedStr);
    }

    static class TestInputObject {
        final List<Integer> expected;
        final int rows;
        final int cols;
        final int[][] positions;

        public TestInputObject(int rows, int cols, List<Integer> expectedOutput, String positionsStr) {
            this.expected  = expectedOutput;
            this.rows = rows;
            this.cols = cols;
            this.positions = buildPositions(positionsStr, expectedOutput.size());
        }

        public static TestInputObject of(int rows, int cols, String positionStr, String expectedStr) {
            return new TestInputObject(rows, cols, buildExpected(expectedStr), positionStr);
        }

        private static List<Integer> buildExpected(String expectedStr) {
            String[] expectedStrArr = expectedStr.substring(1, expectedStr.length() - 1).split(",");
            List<Integer> res = new ArrayList<>(expectedStrArr.length);
            for (String expectedValue : expectedStrArr) {
                res.add(Integer.parseInt(expectedValue));
            }
            return res;
        }

        static int[][] buildPositions(String positionsStr, int posSize) {
            int[][] res = new int[posSize][2];
            String[] positions = positionsStr.substring(2, positionsStr.length()-2).split("],\\[");
            int i = 0;
            String[] posStr = null;
            for(String pos : positions) {
                posStr = pos.split(",");
                res[i++] = new int[]{Integer.parseInt(posStr[0]), Integer.parseInt(posStr[1])};
            }
            return res;
        }

        public List<Integer> getExpected() {
            return expected;
        }

        public int getRows() {
            return rows;
        }

        public int getCols() {
            return cols;
        }

        public int[][] getPositions() {
            return positions;
        }
    }
}
